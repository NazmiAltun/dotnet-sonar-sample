name: CI
on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  docker-build-runtime:
    name: Build Service image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.13.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: name/app
          labels: |
            org.opencontainers.image.version=rc-2.2.0
      - name: Build Service image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          push: true
          load: false
          tags: ghcr.io/nazmialtun/dotnet-sonar-sample:latest
          labels: ${{ steps.meta.outputs.labels }}
          target: runtime
  docker-build-unit-tests:
    name: Build Unit tests image
    runs-on: ubuntu-latest
    needs:
    - docker-build-runtime
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }}
    - name: Build Unit tests image
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile
        push: true
        load: false
        tags: ghcr.io/nazmialtun/dotnet-sonar-sample-unit-tests:latest
        target: unit-tests
  docker-build-integration-tests:
    name: Build Integration tests image
    runs-on: ubuntu-latest
    needs:
    - docker-build-runtime
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }}
    - name: Build Integration tests image
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile
        push: true
        load: false
        tags: ghcr.io/nazmialtun/dotnet-sonar-sample-integration-tests:latest
        target: integration-tests
  run-unit-tests:
    name: Run Unit tests
    runs-on: ubuntu-latest
    needs:
    - docker-build-unit-tests
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }}
    - name: Pull image ghcr.io/nazmialtun/dotnet-sonar-sample-unit-tests
      run: docker pull ghcr.io/nazmialtun/dotnet-sonar-sample-unit-tests:latest
    - name: Run Unit tests
      run: |
        docker run --rm -v /${PWD}/TestResults:/app/TestResults ghcr.io/nazmialtun/dotnet-sonar-sample-unit-tests:latest
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results
        path: TestResults
  run-integration-tests:
    name: Run Integration tests
    runs-on: ubuntu-latest
    needs:
    - docker-build-integration-tests
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }}
    - name: Pull image ghcr.io/nazmialtun/dotnet-sonar-sample-integration-tests
      run: docker pull ghcr.io/nazmialtun/dotnet-sonar-sample-integration-tests:latest
    - name: Run Integration tests
      run: |
        docker run --rm -v /${PWD}/TestResults:/app/TestResults ghcr.io/nazmialtun/dotnet-sonar-sample-integration-tests:latest
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: integration-test-results
        path: TestResults
  sonar-scan:
    name: Run Sonar Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Scan
      uses: NazmiAltun/dotnet-parallel-sonar-scan@v1.1.3
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        test-result-artifacts: unit-test-results,integration-test-results
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

